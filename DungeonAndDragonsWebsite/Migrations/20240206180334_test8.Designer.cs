// <auto-generated />
using System;
using DungeonAndDragonsWebsite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DungeonAndDragonsWebsite.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240206180334_test8")]
    partial class test8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DungeonAndDragonsWebsite.Models.Event", b =>
                {
                    b.Property<string>("EventID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventPlannerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EventID");

                    b.HasIndex("EventPlannerID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("DungeonAndDragonsWebsite.Models.Table", b =>
                {
                    b.Property<string>("TableID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DungeonMasterID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EventID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PlayersAllowed")
                        .HasColumnType("int");

                    b.HasKey("TableID");

                    b.HasIndex("DungeonMasterID");

                    b.HasIndex("EventID");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("DungeonAndDragonsWebsite.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("TableID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DungeonAndDragonsWebsite.Models.Event", b =>
                {
                    b.HasOne("DungeonAndDragonsWebsite.Models.User", "EventPlanner")
                        .WithMany()
                        .HasForeignKey("EventPlannerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventPlanner");
                });

            modelBuilder.Entity("DungeonAndDragonsWebsite.Models.Table", b =>
                {
                    b.HasOne("DungeonAndDragonsWebsite.Models.User", "DungeonMaster")
                        .WithMany()
                        .HasForeignKey("DungeonMasterID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DungeonAndDragonsWebsite.Models.Event", "Event")
                        .WithMany("Tables")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DungeonMaster");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("DungeonAndDragonsWebsite.Models.User", b =>
                {
                    b.HasOne("DungeonAndDragonsWebsite.Models.Table", null)
                        .WithMany("Players")
                        .HasForeignKey("TableID");
                });

            modelBuilder.Entity("DungeonAndDragonsWebsite.Models.Event", b =>
                {
                    b.Navigation("Tables");
                });

            modelBuilder.Entity("DungeonAndDragonsWebsite.Models.Table", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
